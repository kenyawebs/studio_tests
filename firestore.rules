
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Can read their own profile, anyone can create one.
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Journal Entries: Users can only manage their own entries.
    match /journalEntries/{entryId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // Prayer Requests: Publicly readable, but only authors can create. Anyone can update.
    match /prayerRequests/{requestId} {
      allow read;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // Allow any authenticated user to update (e.g., for comments)
      allow update: if request.auth != null;
    }

    // Counter shards for prayer requests are write-only for authenticated users.
    match /prayerRequests/{requestId}/counter_shards/{shardId} {
        allow read: if false;
        allow write: if request.auth != null;
    }

    // Social Posts: Publicly readable, but only authors can create/delete.
    // Anyone can update (for likes).
    match /posts/{postId} {
      allow read;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update: if request.auth != null; // Allows liking
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}
