rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection rules
    match /users/{userId} {
      // Admins can read any user's profile.
      // A regular user can only read their own profile.
      allow read: if request.auth != null && (request.auth.uid == userId || request.auth.token.admin == true);

      // A user can only create their own profile document.
      // The `uid` in the document must match their auth `uid`.
      allow create: if request.auth != null && request.auth.uid == userId && request.resource.data.uid == userId;

      // A user can only update their own profile.
      // They are not allowed to change their `uid`.
      allow update: if request.auth != null && request.auth.uid == userId;

      // No one can delete a user profile from the client.
      allow delete: if false;
    }

    // Journal entries rules
    match /journalEntries/{entryId} {
        // Admins can read any journal entry (for moderation).
        // A user can read their own private journal entries.
        // Any authenticated user can read public journal entries.
        allow read: if request.auth != null && 
                      (request.auth.uid == resource.data.userId || 
                       resource.data.isPublic == true ||
                       request.auth.token.admin == true);
        
        // A user can only write (create, update, delete) their own entries.
        allow write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Prayer requests rules
    match /prayerRequests/{requestId} {
        // Any authenticated user can read all prayer requests.
        allow read: if request.auth != null;

        // A user can only write (create, update, delete) their own requests.
        allow write: if request.auth != null && request.auth.uid == resource.data.userId;

        // Rules for the distributed counter subcollection
        match /counter_shards/{shardId} {
            // Anyone authenticated can write to the shards to update the count.
            allow write: if request.auth != null;
        }
    }

    // Social posts rules
    match /posts/{postId} {
        // Any authenticated user can read all posts.
        allow read: if request.auth != null;

        // A user can only write (create, update, delete) their own posts.
        allow write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}
