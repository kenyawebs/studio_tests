rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Can read/update their own profile, can only create their own profile
    match /users/{userId} {
      allow get, update: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
    }

    // Journal Entries: Private by default.
    // Users can only query for their own entries.
    match /journalEntries/{entryId} {
      allow get, update, delete: if request.auth.uid == resource.data.userId;
      // This rule is the key fix: It specifically allows the query "where userId == my_id"
      allow list: if request.auth.uid != null && request.query.where.userId == request.auth.uid;
      allow create: if request.auth.uid != null && request.resource.data.userId == request.auth.uid;
    }

    // Posts (Social Feed): Publicly readable, write requires auth and correct user ID
    match /posts/{postId} {
      allow read: if true;
      allow create: if request.auth.uid != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth.uid == resource.data.userId;
    }
    
    // Prayer Requests: Publicly readable, write requires auth and correct user ID
    match /prayerRequests/{requestId} {
      allow read: if true;
      allow create: if request.auth.uid != null && request.resource.data.userId == request.auth.uid;
      
      // Distributed counter subcollection for pray counts
      match /counter_shards/{shardId} {
        allow create: if request.auth.uid != null; // Anyone logged in can increment
      }
    }
  }
}
