
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Can only read/write their own profile.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Journal Entries: Readable by any logged-in user, but only writable by the owner.
    // The client-side query ensures users only see their own entries.
    match /journalEntries/{entryId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && (request.resource.data.userId == request.auth.uid || resource.data.userId == request.auth.uid);
    }

    // Social Feed Posts: Publicly readable, but writing is protected.
    match /posts/{postId} {
      allow read: if true;
      // User must be owner to write. On create, check incoming resource. On update/delete, check existing resource.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // Prayer Wall: Publicly readable, but writing is protected.
    match /prayerRequests/{requestId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
      // Allow updates for pray count, comments etc, by any logged in user.
      allow update: if request.auth != null;

      // Distributed Counter Shards for pray count
      match /counter_shards/{shardId} {
        allow create: if request.auth != null;
      }
    }
  }
}
