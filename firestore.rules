rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read any profile, but only write to their own.
    match /users/{userId} {
      allow get: if request.auth != null;
      allow create, update: if request.auth.uid == userId;
    }

    // Prayer requests can be read and created by any authenticated user.
    // Updates are handled by extensions, so client-side updates are denied.
    match /prayerRequests/{requestId} {
      allow list, get: if request.auth != null;
      allow create: if request.auth != null
                    && request.resource.data.userId == request.auth.uid;

      // Allow client to trigger distributed counter extension
      match /counter_shards/{shardId} {
        allow create: if request.auth != null;
      }
    }

    // Posts can be read by anyone authenticated.
    // They can be created by the authenticated user.
    // They can be deleted ONLY by the owner.
    // They can be updated by any authenticated user (for liking).
    match /posts/{postId} {
      allow list, get: if request.auth != null;
      allow create: if request.auth != null
                    && request.resource.data.userId == request.auth.uid;
      // This is the key fix: any logged-in user can update a post.
      // This is required for the "like" functionality to work, as users
      // need to update a post document they don't own.
      allow update: if request.auth != null;
      allow delete: if request.auth.uid == resource.data.userId;
    }
  }
}
