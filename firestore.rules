
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is logged in
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Helper function to check if the user is an admin
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // Users collection:
    // - Anyone can create their own user profile document.
    // - Only the owner can read or update their own profile.
    // - Admins can read any profile.
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isSignedIn();
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId) || isAdmin();
    }
    
    // Prayer Requests:
    // - Anyone can read prayer requests.
    // - Only signed-in users can create, update, or interact with requests.
    match /prayerRequests/{requestId} {
      allow read: if true;
      allow create, update: if isSignedIn();
      allow delete: if isOwner(resource.data.userId) || isAdmin();
      
      // Distributed Counter for prayer counts
      match /counter_shards/{shardId} {
        allow create: if isSignedIn();
        allow read, update, delete: if false; // Extension handles this
      }
    }

    // Posts (Social Feed):
    // - Anyone can read posts.
    // - Only signed-in users can create or interact with posts.
    match /posts/{postId} {
        allow read: if true;
        allow create, update: if isSignedIn();
        allow delete: if isOwner(resource.data.userId) || isAdmin();
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
