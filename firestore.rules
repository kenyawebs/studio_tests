
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read/write their own profile.
    // Admins can read/write any user profile.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || request.auth.token.admin == true;
    }

    // Any authenticated user can read posts.
    // Users can create posts.
    // Users can only update/delete their own posts.
    // Admins have full access.
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth.uid == resource.data.userId || request.auth.token.admin == true;

      // Rules for the distributed counter on posts (if implemented)
      // This is not standard and depends on extension setup. For now, we secure the main doc.
    }

    // Any authenticated user can read prayer requests.
    // Users can create requests.
    // Users can only update/delete their own requests.
    // Admins have full access.
    match /prayerRequests/{requestId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth.uid == resource.data.userId || request.auth.token.admin == true;
      
      // Allow anyone to trigger the distributed counter extension by writing to a subcollection.
      match /counter_shards/{shardId} {
        allow create: if request.auth != null;
      }
    }

    // Journal entries are private, only the owner can manage them.
    // Admins can read entries for moderation, but cannot write them.
    match /journalEntries/{entryId} {
        allow read: if request.auth.uid == resource.data.userId || request.auth.token.admin == true;
        allow create, update, delete: if request.auth.uid == resource.data.userId;
    }

  }
}
