
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Can only read/write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Journal Entries: Public entries are readable by anyone. Private entries are only readable by the owner.
    match /journalEntries/{entryId} {
      allow read: if resource.data.isPublic == true || (request.auth != null && resource.data.userId == request.auth.uid);
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // Prayer Requests: Publicly readable, but writes are restricted
    match /prayerRequests/{requestId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null;

      // Shards for distributed counters
      match /counter_shards/{shardId} {
        allow create: if request.auth != null;
      }
    }

    // Social Posts: Public posts readable by anyone. Write/update/delete restricted to owner.
    match /posts/{postId} {
      // For now, all posts are public. This rule is structured to allow for private posts in the future.
      allow read: if resource.data.isPublic == true || (request.auth != null && resource.data.userId == request.auth.uid);
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
  }
}
